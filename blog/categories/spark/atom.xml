<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Spark | ssledz blog]]></title>
  <link href="http://ssledz.github.io/blog/categories/spark/atom.xml" rel="self"/>
  <link href="http://ssledz.github.io/"/>
  <updated>2020-02-15T17:43:42+01:00</updated>
  <id>http://ssledz.github.io/</id>
  <author>
    <name><![CDATA[Sławomir Śledź]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple Sbt Setup for Spark Project]]></title>
    <link href="http://ssledz.github.io/blog/2017/01/04/simple-sbt-setup-for-spark-project/"/>
    <updated>2017-01-04T18:03:14+01:00</updated>
    <id>http://ssledz.github.io/blog/2017/01/04/simple-sbt-setup-for-spark-project</id>
    <content type="html"><![CDATA[<p>Below can be found a simple sbt setup for a spark application in scala.</p>

<p>Directory layout
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find .
</span><span class='line'>.
</span><span class='line'>./build.sbt
</span><span class='line'>./src/main
</span><span class='line'>./src/main/scala
</span><span class='line'>./src/main/scala/pl
</span><span class='line'>./src/main/scala/pl/softech
</span><span class='line'>./src/main/scala/pl/softech/WordCountExample.scala
</span><span class='line'>./src/main/resources
</span><span class='line'>./src/main/resources/log4j.properties
</span><span class='line'>./src/main/resources/words.txt&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;```&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;build.sbt</span></code></pre></td></tr></table></div></figure>
name := “spark-simple-app”</p>

<p>version := “1.0”</p>

<p>scalaVersion := “2.11.8”</p>

<p>val sparkVersion = “2.1.0”</p>

<p>libraryDependencies += “org.apache.spark” %% “spark-core” % sparkVersion
<code>
log4j.properties
</code>
log4j.rootCategory=ERROR, console
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n
<code>
WordCountExample.scala
</code>scala
package pl.softech</p>

<p>import org.apache.spark.{SparkConf, SparkContext}</p>

<p>object WordCountExample {</p>

<p>def main(args: Array[String]) {</p>

<pre><code>val conf = new SparkConf().setAppName("spark-simple-app").setMaster("local[*]")

val sc = new SparkContext(conf)

val textFile = sc.textFile("src/main/resources/words.txt")

val counts = textFile.flatMap(line =&gt; line.split(" "))
  .map(word =&gt; (word, 1))
  .reduceByKey(_ + _)
  .sortBy(-_._2)

printf(counts.collect().mkString("\n"))

sc.stop()   }
</code></pre>

<p>}
```</p>

<p>Sources can be found <a href="https://github.com/ssledz/ssledz.github.io-src/tree/master/spark-simple-template">here</a></p>
]]></content>
  </entry>
  
</feed>
